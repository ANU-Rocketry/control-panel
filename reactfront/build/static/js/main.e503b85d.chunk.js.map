{"version":3,"sources":["components/index.js","components/panels/safety-panel.js","utils.js","components/panels/graph-panel.js","components/panels/sequence-panel.js","components/panels/control-panel.js","index.js"],"names":["SectionTitle","children","style","width","padding","height","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","paddingLeft","TopBar","classes","className","AppBar","position","Toolbar","Panel","props","Paper","BigSwitch","withStyles","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","Switch","top","left","ToggleSwitch","value","setValue","onChange","textAlign","SafetyCard","toggle","switchValue","setSwitchValue","label","cursor","borderBottom","SafetyPanel","state","emit","that","armingSwitchActive","data","arming_switch","manualSwitchActive","manual_switch","dataLoggingActive","data_logging","justifyContent","isButton","x","wsAddress","size","e","setState","target","localStorage","setItem","connect","placeholder","defaultWSAddress","ping","voltsToPsi","volts","barMax","resistance","formatData","map","dict","time","parseInt","toFixed","LOX_N2_Pressure","LOX","analog","LOX_Tank_Pressure","ETH_N2_Pressure","ETH","ETH_Tank_Pressure","GraphPanel","React","useState","paused","setPaused","history","staticData","setStaticData","n","length","sample","slice","ResponsiveContainer","LineChart","margin","right","bottom","Legend","verticalAlign","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Label","angle","textAnchor","Tooltip","y","Brush","Line","type","stroke","filter","_","i","reduceResolution","Sequences","sequences","current_sequence","current_executing","sequence_executing","open","setOpen","handleChange","inputElement","a","files","file","parseCSV","csvToArray","str","delimiter","rows","split","arr","row","trim","readFileAsText","inputFile","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsText","text","commands","forEach","element","Error","toLowerCase","num","Number","push","header","parameter","name","pin","num2","armed","Dialog","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","borderRight","accept","maxLength","overflow","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","background","component","scope","com","undefined","normalisePosition","controlWidgetStyle","enabled","borderStyle","ControlSwitch","testEnd","box","fontSize","disabled","ControlCard","atmosphere","ControlPanel","buttons","button","charAt","abbrev","labJackChanel","nameShort","sensors","sensor","maxPressure","valve","labJackPin","sensorNumber","App","mostRecentWarning","showWarning","getItem","bind","this","interval","setInterval","mounted","clearInterval","socket","close","WebSocket","onopen","console","log","onclose","setTimeout","onmessage","JSON","parse","Date","getTime","error","commandHeader","readyState","OPEN","send","stringify","command","latest_warning","Alert","onClose","severity","message","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e503b85d.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper, Toolbar, AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\n\nexport function SectionTitle({ children }) {\n    return (\n        <div style={{width:\"100%\", padding: \"6px\", height:\"40px\"}}>\n            <h1>\n                {children}\n            </h1>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    paddingLeft: theme.spacing(2),\n  },\n}));\n\nexport function TopBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <h1 className={classes.title}>\n            Test Stand Control Software\n          </h1>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport function Panel({ children, title, ...props }) {\n  return (\n    <div className='panel' {...props}>\n        <SectionTitle>{title}</SectionTitle>\n        <Paper style={{width:\"100%\", height:\"calc(100% - 52px\"}}>\n          {children}\n        </Paper>\n    </div>\n  );\n}\n\nexport const BigSwitch = withStyles((theme) => ({\n  root: {\n    width: 60,\n    height: 32,\n    padding: 1,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(26px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 28,\n    height: 28,\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch);\n\nexport const NormalSwitch = withStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: \"-10px\",\n    left: \"-10px\",\n    width: \"6vw\",\n  },\n}))(Switch);\n\nexport function ToggleSwitch({ value, setValue }) {\n  return (\n    <div className='toggle-switch' style={{ width: 60}}>\n      <span className={value ? 'inactive' : 'active'}>Off</span>\n      <BigSwitch checked={value} onChange={() => setValue(!value)} />\n      <span className={value ? 'active' : 'inactive'} style={{ textAlign:'right', width:'100%', display:'block' }}>On</span>\n    </div>\n  );\n}\n\n\n\n","import React from 'react';\nimport { Panel, ToggleSwitch } from '../index'\n\nexport function SafetyCard(props) {\n  var toggle = \"\"\n  if (props.children) {\n    toggle = props.children;\n  } else {\n    toggle = <ToggleSwitch value={props.switchValue} setValue={props.setSwitchValue} />\n  }\n\n  const style = props.label ? {cursor:'help',borderBottom:'1px dotted #333'} : {}\n\n  return (\n    <div className='safety-card'>\n      <h2 title={props.label} style={style}>\n        {props.title}\n      </h2>\n      {toggle}\n    </div>\n  );\n}\n\nexport default function SafetyPanel({ state, emit, that }) {\n  const armingSwitchActive = state.data === null ? false : state.data.arming_switch\n  const toggleArmingSwitch = x => emit('ARMINGSWITCH', x)\n\n  const manualSwitchActive = state.data === null ? false : state.data.manual_switch\n  const toggleManualSwitch = x => emit('MANUALSWITCH', x)\n\n  const dataLoggingActive = state.data === null ? false : state.data.data_logging\n  const toggleDataLogging = x => emit('DATALOG', x)\n\n  return (\n    <Panel title=\"Safety\" className='panel safety'>\n      <div className=\"flex\" style={{ justifyContent: 'flex-start' }}>\n        <SafetyCard title=\"Arming Switch\"\n          label=\"Controls if the state can change\"\n          isButton=\"false\"\n          switchValue={armingSwitchActive}\n          setSwitchValue={toggleArmingSwitch} />\n\n        <SafetyCard title=\"Manual Control\"\n          label=\"Allow manual pin operation\"\n          isButton=\"false\"\n          switchValue={manualSwitchActive}\n          setSwitchValue={toggleManualSwitch} />\n\n        <SafetyCard title=\"Data Logging\"\n          label=\"Logging data\"\n          isButton=\"false\"\n          switchValue={dataLoggingActive}\n          setSwitchValue={toggleDataLogging} />\n\n        <SafetyCard title=\"R-Pi IP\"\n          label=\"Local IP address of the Raspberry Pi. Must be on the same network. If it's incorrect no new data will appear\">\n          <input value={state.wsAddress} size='10' onChange={e => {\n            that.setState({ wsAddress: e.target.value }, () => {\n              localStorage.setItem('wsaddr', e.target.value)\n              that.connect()\n            })\n          }} placeholder={state.defaultWSAddress} />\n        </SafetyCard>\n\n        <SafetyCard title=\"Ping\"\n          label=\"Time delay to reach the server\">\n          {state.ping ? state.ping : '0'}ms\n        </SafetyCard>\n      </div>\n    </Panel>\n  )\n}\n","\nexport function voltsToPsi(volts, barMax) {\n    const resistance = 120; // ohm\n    const current1 = 0.004; // amps\n    const current2 = 0.02; // amps\n    const bar = barMax/(resistance * current2) * (volts - resistance * current1)\n    return bar * 14.504; // 1bar = 14.5psi\n}\n","import React from 'react';\nimport { Panel } from '../index'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label, Brush } from 'recharts'\nimport Switch from '@material-ui/core/Switch';\nimport { voltsToPsi } from '../../utils';\n\nfunction formatData(state, data) {\n  return data.map(dict => {\n    return {\n      time: \"t-\" + ((parseInt(state.data.time) - parseInt(dict.time)) / 1000).toFixed(3),\n      // Note: these bar max figures are also in the sensors list in control-panel.js\n      LOX_N2_Pressure: voltsToPsi(dict.LOX.analog[\"1\"], 250 /* bar */),\n      LOX_Tank_Pressure: voltsToPsi(dict.LOX.analog[\"3\"], 100 /* bar */),\n      ETH_N2_Pressure: voltsToPsi(dict.ETH.analog[\"1\"], 250 /* bar */),\n      ETH_Tank_Pressure: voltsToPsi(dict.ETH.analog[\"3\"], 100 /* bar */),\n    }\n  })\n}\n\nfunction reduceResolution(data) {\n  return data.filter(function(_, i) {\n     return i % 2 === 0;\n })\n}\n\nexport default function GraphPanel({ state, emit }) {\n  const [paused, setPaused] = React.useState(false);\n  const [staticData, setStaticData] = React.useState(formatData(state, state.history));\n  const n = state.history.length;\n  const sample = !paused ? (n > 200 ? state.history.slice(n - 200, -1) : state.history) : staticData;\n  const data = !paused ? formatData(state, sample) : staticData;\n  return (\n    <Panel title=\"Graphs\" className='panel graphs'>\n      <ResponsiveContainer width=\"100%\" height=\"90%\">\n        <LineChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 20, bottom: 10 }}\n        >\n          <Legend verticalAlign=\"top\" height={50}/>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis>\n            <Label angle={270} position='left' style={{ textAnchor: 'middle' }}>\n              Pressure (PSI)\n            </Label>\n          </YAxis>\n          <Tooltip\n            position={{ x: 100, y: 0 }} // this was my preferred static position\n          />\n          {paused ? <Brush/> : null}\n          <Line type=\"monotone\" dataKey=\"LOX_N2_Pressure\" stroke=\"#ff0000\"></Line>\n          <Line type=\"monotone\" dataKey=\"LOX_Tank_Pressure\" stroke=\"#000000\"></Line>\n          <Line type=\"monotone\" dataKey=\"ETH_N2_Pressure\" stroke=\"#0099ff\"></Line>\n          <Line type=\"monotone\" dataKey=\"ETH_Tank_Pressure\" stroke=\"#66ff99\"></Line>\n        </LineChart>\n      </ResponsiveContainer>\n      <Switch checked={paused} onChange={e => {\n        setPaused(e.target.checked)\n        if (paused) setStaticData(formatData(state, reduceResolution(n > 600 ? state.history.slice(n - 600, -1) : state.history)));\n      }} /> Analysis Mode\n    </Panel>\n  )\n}","import { Table, TableBody, TableCell, TableHead, TableRow, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport React from 'react';\nimport { Panel } from '../index'\nimport {SafetyCard} from './safety-panel'\n\nexport default function Sequences({ state, emit }) {\n\n    var sequences = (state.data && state.data.current_sequence) ?? []\n    var current_executing = state.data === null ? null : state.data.sequence_executing\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleChange = async (inputElement) => {\n        if (inputElement.target.files.length === 0) return;\n        var file = inputElement.target.files[0];\n        const data = parseCSV(file)\n        if (data !== false) {\n            emit('SETSEQUENCE', await data)\n        } else {\n            setOpen(true);\n        }\n        inputElement.target.value = ''\n    };\n\n    function csvToArray(str, delimiter = \",\") {\n\n        const rows = str.split(\"\\n\");\n\n        const arr = rows.map(function (row) {\n            const values = row.split(delimiter).map(x => x.trim())\n            return values;\n        });\n\n        // return the array\n        return arr;\n    }\n\n    const readFileAsText = (inputFile) => {\n        const temporaryFileReader = new FileReader();\n\n        return new Promise((resolve, reject) => {\n            temporaryFileReader.onerror = () => {\n                temporaryFileReader.abort();\n                reject(new DOMException(\"Problem parsing input file.\"));\n            };\n\n            temporaryFileReader.onload = () => {\n                resolve(temporaryFileReader.result);\n            };\n            temporaryFileReader.readAsText(inputFile);\n        });\n    };\n\n    async function parseCSV(file) {\n        const text = await readFileAsText(file);\n        const arr = csvToArray(text);\n        var commands = [];\n        try {\n            arr.forEach((element) => {\n                if (element[0] === \"OPEN\" || element[0] === \"CLOSE\") {\n                    if (element.length !== 3) throw new Error('invalid input');\n                    if (element[1].toLowerCase() !== \"lox\" && element[1].toLowerCase() !== \"eth\") throw new Error('invalid input');\n                    var num = Number.parseInt(element[2]);\n                    if (!num) throw new Error('invalid input');\n                    commands.push({\n                        header: element[0],\n                        parameter: {\n                            name: element[1],\n                            pin: num\n                        }\n                    });\n                } else if (element[0] === \"SLEEP\") {\n                    if (element.length !== 2) throw new Error('invalid input');\n                    var num2 = Number.parseInt(element[1]);\n                    if (!num2) throw new Error('invalid input');\n                    commands.push({\n                        header: element[0],\n                        parameter: num2\n                    });\n                } else if (element[0] === \"\") {\n                    return\n                } else { throw new Error('invalid input') };\n            })\n        } catch (e) {\n            return false;\n        }\n        return commands;\n    }\n\n    const abort = x => emit('ABORTSEQUENCE', x)\n    const armed = state.data && state.data.arming_switch;\n\n    return (\n        <Panel title=\"Sequences\">\n            <div>\n                <Dialog\n                    open={open}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">Invalid CSV</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Confirm the CSV given was valid, read documentation if unsure.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => { setOpen(false) }} color=\"primary\" autoFocus>\n                            Understood!\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n            <div className=\"flex\">\n                <div style={{ width: '200px', borderRight: '1px solid #999', height: '100%' }}>\n                    <div className='frame'>\n                        <h2>\n                            Start Sequence\n                        </h2>\n                        <div>\n                            <input type=\"file\" accept=\".csv\" maxLength=\"1\"\n                                onChange={handleChange} />\n                        </div><br/>\n                        <button onClick={() => emit('BEGINSEQUENCE', null)} style={{backgroundColor:armed?'lime':'lightgrey',padding:10,cursor:'pointer'}}>Start</button><br/><br/>\n                        <SafetyCard title=\"Run Abort Sequence\">\n                            <button onClick={() => abort()} style={{backgroundColor:armed?'tomato':'lightgrey',padding:10,cursor:'pointer'}}>ABORT</button>\n                        </SafetyCard>\n                    </div>\n                </div>\n                <div style={{ overflow: 'auto', width: '100%', height: '100%' }}>\n                    <Table stickyHeader aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Command</TableCell>\n                                <TableCell align=\"center\">LabJack</TableCell>\n                                <TableCell align=\"center\">Value</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {current_executing &&\n                                <TableRow style={{ background: '#94F690' }}>\n                                    <TableCell component=\"th\" scope=\"row\">{current_executing.header}</TableCell>\n                                    <TableCell align=\"center\">{current_executing.data.name && current_executing.data.name}</TableCell>\n                                    <TableCell align=\"center\">{current_executing.data.name ? current_executing.data.pin : ((current_executing.time - state.data.time) / 1000).toFixed(4)}</TableCell>\n                                </TableRow>}\n                            {sequences.map((com) => (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">{com.header}</TableCell>\n                                    <TableCell align=\"center\">{com.data.name === undefined ? \"\" : com.data.name}</TableCell>\n                                    <TableCell align=\"center\">{com.data.name === undefined ? com.data : com.data.pin}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </div>\n            </div>\n        </Panel>\n    )\n}","import { Switch } from '@material-ui/core';\nimport React from 'react';\nimport { voltsToPsi } from '../../utils';\nimport { Panel } from '../index'\n\nfunction normalisePosition (num) {\n    return `${num*26}px`;\n}\n\nfunction controlWidgetStyle({ x, y, width, height, enabled }) {\n    return {\n        position: 'absolute',\n        borderStyle: 'solid',\n        borderColor: 'transparent', // temp hack to keep alignment, should change margins instead\n        width: normalisePosition(width),\n        height: normalisePosition(height),\n        top: normalisePosition(y), \n        left: normalisePosition(x),\n        ...(!enabled ? {cursor:'help'} : {})\n    };\n}\n\nfunction ControlSwitch({ state, emit, ...props}) {\n\n    const value = state.data === null ? false : state.data[props.testEnd][\"digital\"][props.pin]\n    const setValue =  x => state.data[props.testEnd][\"digital\"][props.pin] ? emit('CLOSE', { name: props.testEnd, pin: parseInt(props.pin) }) : emit('OPEN', { name: props.testEnd, pin: parseInt(props.pin) })\n\n    const box = controlWidgetStyle(props);\n    const label = {\n        position: 'absolute',\n        margin: 'auto',\n        fontSize: \"1rem\",\n        top: normalisePosition(props.y - 1), \n        left: normalisePosition(props.x - 1), \n    };\n\n    return (\n        <div>\n            {state.data && <div style={box} title={!props.enabled ? 'Please enable the arming and manual control switches to toggle' : ''}>\n                <Switch checked={value} onChange={() => setValue(!value)} disabled={!props.enabled} />\n                <label className={(value ? 'active' : 'inactive') + ' control-label ' + (props.enabled ? '':'disabled')}><br/>\n                {value ? \"On\" : \"Off\"}\n                </label>\n            </div>}\n            <h4 style={label}>\n                {props.title}\n            </h4>\n        </div>\n    );\n}\n\nfunction ControlCard({ state, emit, ...props }) {\n\n    const box = controlWidgetStyle({ enabled: true, ...props });\n    let value = null;\n    if (state.data) {\n        value = state.data[props.testEnd][\"analog\"][props.pin]\n        value = voltsToPsi(value, props.barMax)\n    }\n\n    const atmosphere = 14.6959 //psi\n    // Display as pressurised if it's more than 2 atmospheres\n    const pressurised = value && value > atmosphere * 2\n    if (pressurised) {\n        box.backgroundColor = 'tomato'\n    }\n\n    return (\n        <div style={box}>\n            <div style={{fontSize: \"1rem\"}}>\n                {props.title}\n            </div>\n            <div style={{fontSize: \"1rem\"}}>\n                {value && value.toFixed(3)} PSI\n            </div>\n        </div>\n    );\n}\n\nexport default function ControlPanel({ state, emit }) {\n    return (  \n        <Panel title=\"Control Panel\" className='panel control'>\n            <div className=\"control-panel\">\n                {buttons.map((button) =>\n                    <ControlSwitch\n                        title={button.pin.testEnd.charAt(0) + ' ' + button.pin.abbrev + ' ' + button.pin.labJackChanel}\n                        key={button.pin.nameShort}\n                        state={state}\n                        emit={emit}\n                        pin={button.pin.labJackChanel}\n                        testEnd={button.pin.testEnd}\n                        width={button.position.width}\n                        height={button.position.height}\n                        x={button.position.x}\n                        y={button.position.y}\n                        enabled={state.data && state.data.arming_switch && state.data.manual_switch}\n                    />\n                )}\n                {sensors.map((sensor) =>\n                    <ControlCard\n                        title={sensor.pin.nameShort}\n                        key={sensor.pin.nameShort}\n                        state={state}\n                        emit={emit}\n                        pin={sensor.pin.labJackChanel}\n                        testEnd={sensor.pin.testEnd}\n                        width={sensor.position.width}\n                        height={sensor.position.height}\n                        x={sensor.position.x}\n                        y={sensor.position.y}\n                        barMax={sensor.pin.maxPressure}\n                    />\n                )}\n            </div>\n        </Panel>\n    )\n}\n\n\nconst buttons = [\n    {\n        pin: {valve: 11, labJackPin: 'EIO6', labJackChanel: '14', testEnd: 'ETH',  name: 'Main Fuel (Ethanol) Valve',\n            nameShort: 'E.L.V1', abbrev: 'main'},\n        position: {width: \"2\", height: \"1\", x: \"11.5\", y: \"15\"}\n    },\n    {\n        pin: {valve: 10, labJackPin: 'CIO1', labJackChanel: '12', testEnd: 'ETH',  name: 'Fuel (Ethanol) Fill Valve',\n            nameShort: 'E.DF.V1', abbrev: 'fill'}, \n        position: {width: \"2\", height: \"1\", x: \"8\", y: \"13\"}\n    },\n    {\n        pin: {valve: 9,  labJackPin: 'EIO2', labJackChanel: '10', testEnd: 'ETH',  name: 'Fuel (Ethanol) Dump Valve',\n            nameShort: 'E.DF.V2', abbrev: 'dump'}, \n        position: {width: \"2\", height: \"1\", x: \"4\", y: \"13\"}\n    },\n    { \n        pin: {valve: 8,  labJackPin: 'EIO0', labJackChanel: '8',  testEnd: 'ETH',  name: 'Fuel (Ethanol) Tank Nitrogen Pressurisation Valve',\n            nameShort: 'N.L.E.V2', abbrev: 'pres'}, \n        position: {width: \"2\", height: \"1\", x: \"8\", y: \"4\"}\n    },\n    {\n        pin: {valve: 7,  labJackPin: 'CIO3', labJackChanel: '19', testEnd: 'ETH',  name: 'Fuel (Ethanol) Tank Vent Valve',\n            nameShort: 'N.L.E.V3', abbrev: 'vent'}, \n        position: {width: \"2\", height: \"1\", x: \"11\", y: \"1\"}\n    },\n    {\n        pin: {valve: 6,  labJackPin: 'EIO4', labJackChanel: '17', testEnd: 'ETH',  name: 'Fuel (Ethanol) Line Nitrogen Purge Valve',\n            nameShort: 'E.L.V2', abbrev: 'purge'}, \n        position: {width: \"2\", height: \"1\", x: \"8\", y: \"17\"}\n    },\n    {\n        pin: {valve: 5,  labJackPin: 'CIO0', labJackChanel: '16', testEnd: 'LOX',      name: 'Main Oxidiser (LOX) Valve',\n            nameShort: 'O.L.V1', abbrev: 'main'}, \n        position: {width: \"2\", height: \"1\", x: \"17.5\", y: \"15\"}\n    },\n    {\n        pin: {valve: 4,  labJackPin: 'CIO2', labJackChanel: '18', testEnd: 'LOX',      name: 'Oxidiser (LOX) Fill Valve',\n            nameShort: 'O.DF.V1', abbrev: 'fill'},\n        position: {width: \"2\", height: \"1\", x: \"21\", y: \"13\"}\n    },\n    {\n        pin: {valve: 3,  labJackPin: 'EIO1', labJackChanel: '9',  testEnd: 'LOX',      name: 'Oxidiser (LOX) Dump Valve',\n            nameShort: 'O.DF.V2', abbrev: 'dump'}, \n        position: {width: \"2\", height: \"1\", x: \"25\", y: \"13\"}\n    },\n    {\n        pin: {valve: 2,  labJackPin: 'EIO3', labJackChanel: '11', testEnd: 'LOX',      name: 'Oxidiser (LOX) Tank Nitrogen Pressurisation Valve',\n            nameShort: 'N.L.O.V2', abbrev: 'pres'}, \n        position: {width: \"2\", height: \"1\", x: \"21\", y: \"4\"}\n    },\n    {\n        pin: {valve: 1,  labJackPin: 'EIO5', labJackChanel: '13', testEnd: 'LOX',      name: 'Oxidiser (LOX) Tank Vent Valve',\n            nameShort: 'N.L.O.V3', abbrev: 'vent'}, \n        position: {width: \"2\", height: \"1\", x: \"18\", y: \"1\"}\n    },\n    {\n        pin: {valve: 0,  labJackPin: 'EIO7', labJackChanel: '15', testEnd: 'LOX',      name: 'Oxidiser (LOX) Line Nitrogen Purge Valve',\n            nameShort: 'O.L.V2', abbrev: 'purge'},\n        position: {width: \"2\", height: \"1\", x: \"21\", y: \"17\"}\n    }\n]\n\nconst sensors = [\n    {\n        // Note: these bar max figures are also in the formatData function in graph-panel.js\n        pin: {sensorNumber: 0, labJackPin: 'FIO1', labJackChanel: '1', testEnd: 'LOX', maxPressure: 250, name: 'LOX Nitrogen Pressurant Sensor', nameShort: '(N.L.O.P1)'},\n        position: {width: \"5\", height: \"3\", x: \"25\", y: \"3\"}\n    },\n    {\n        pin: {sensorNumber: 1, labJackPin: 'FIO3', labJackChanel: '3', testEnd: 'LOX', maxPressure: 100, name: 'LOX Tank Pressure Sensor', nameShort: '(O.L.P1)'},\n        position: {width: \"3\", height: \"4.5\", x: \"17\", y: \"7.5\"}\n    },\n    {\n        pin: {sensorNumber: 2, labJackPin: 'FIO1', labJackChanel: '1', testEnd: 'ETH', maxPressure: 250, name: 'Ethanol Nitrogen Pressurant Sensor', nameShort: '(N.L.E.P1)'},\n        position: {width: \"5\", height: \"3\", x: \"1\", y: \"3\"}\n    },\n    {\n        pin: {sensorNumber: 3, labJackPin: 'FIO3', labJackChanel: '3', testEnd: 'ETH', maxPressure: 100, name: 'Ethanol Tank Pressure Sensor', nameShort: '(E.L.P1)'},\n        position: {width: \"3\", height: \"4.5\", x: \"11\", y: \"7.5\"}\n    }\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { TopBar } from \"./components/index\"\nimport SafetyPanel from './components/panels/safety-panel';\nimport GraphPanel from './components/panels/graph-panel'\nimport Sequences from './components/panels/sequence-panel';\nimport ControlPanel from './components/panels/control-panel';\nimport Alert from '@material-ui/lab/Alert';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { data: null, history: [], mostRecentWarning: {}, showWarning: false,\n    wsAddress: localStorage.getItem('wsaddr') || \"127.0.0.1\",\n    defaultWSAddress: \"127.0.0.1\" };\n    this.emit = this.emit.bind(this)\n    this.connect()\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => this.emit('PING'), 200);\n    this.mounted = true;\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n    clearInterval(this.interval);\n  }\n  connect() {\n    if (this.socket) this.socket.close();\n    try {\n    this.socket = new WebSocket(`ws://${this.state.wsAddress}:8888`)\n    this.socket.onopen = e => console.log('websocket connection established')\n    this.socket.onclose = e => {\n      setTimeout(() => {\n        if (!this.socket) {\n          this.connect()\n        }\n      }, 1000)\n    }\n    this.socket.onmessage = e => {\n      if (!this.mounted) return;\n      const data = JSON.parse(e.data);\n      switch (data.type) {\n        case 'STATE':\n          // React state is not meant to be mutated but we don't want to copy\n          // huge lists all the time and it won't cause us any problems in\n          // this specific case\n          // The history list is stored as [oldest, ..., newest]\n          this.state.history.push(data.data);\n          // Anything beyond 10 000 items is a bit extreme, halve it\n          if (this.state.history.length > 10000)\n            // eslint-disable-next-line\n            this.state.history = this.state.history.slice(5000, -1);\n          this.setState({ data: data.data, history: this.state.history })\n          break\n        case 'PING':\n          this.setState({ ping: new Date().getTime() - data.data })\n          break\n        default:\n          console.error(data)\n      }\n    }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  emit(commandHeader, parameter = null) {\n    if (this.socket.readyState !== WebSocket.OPEN) return;\n    this.socket.send(JSON.stringify({\n      command: {\n        header: commandHeader,\n        data: parameter\n      },\n      time: new Date().getTime()\n    }));\n  }\n\n  render() {\n    if (this.state.data && this.state.data.latest_warning && this.state.data.latest_warning.id !== this.state.mostRecentWarning.id) {\n      console.log(this.state.mostRecentWarning);\n      this.setState({ mostRecentWarning: this.state.data.latest_warning, showWarning: true });\n    }\n    return (\n      <div>\n        <TopBar />\n        <div className='panels-root'>\n          <div className='panel-row-1'>\n            <SafetyPanel state={this.state} emit={this.emit} that={this} />\n            <Sequences state={this.state} emit={this.emit} />\n          </div>\n          <div className='panel-row-2'>\n            <ControlPanel state={this.state} emit={this.emit} />\n            <GraphPanel state={this.state} emit={this.emit} />\n          </div>\n          {\n          this.state.showWarning \n            ? <Alert onClose={()=>{this.setState({ showWarning: false })}} severity=\"error\" className='alert'>\n              {this.state.mostRecentWarning.message}\n              </Alert> \n            : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}